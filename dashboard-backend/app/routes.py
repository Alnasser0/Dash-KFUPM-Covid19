from app import app

import os
import subprocess
import xml.etree.ElementTree as ET

import moviepy.video.io.ImageSequenceClip as ISC

from flask import render_template, send_from_directory
from flask import send_file, safe_join, abort
from flask import request

from dotenv import load_dotenv
from pymongo import MongoClient
from bson.json_util import dumps

load_dotenv()

DB_NAME = os.getenv('DB_NAME')
DB_USERNAME = os.getenv('DB_USERNAME')
DB_PASSWORD = os.getenv('DB_PASSWORD')

client = MongoClient(
    f"mongodb+srv://{DB_USERNAME}:{DB_PASSWORD}@covid19-kfupm.8orak.azure.mongodb.net/{DB_NAME}?retryWrites=true&w=majority"
)
db = client[DB_NAME]
regions_collection = db['regions']
cities_collection = db['cities']
misc_collection = db['misc_info']


@app.route("/<path:path>", methods=["GET"])
def static_proxy(path):
    """Returns static files"""
    return send_from_directory("static", path)


@app.route("/")
def index():
    """Returns index.html (generated by Angular)"""
    return render_template("index.html")


@app.route('/total')
def get_total():
    return dumps(regions_collection.find({
        '_id': 'All Regions'
    }))


@app.route('/all-regions')
def get_regions():
    return dumps(regions_collection.find({
        '_id': {'$ne': 'All Regions'}
    }))


@app.route('/all-cities')
def get_cities():
    return dumps(cities_collection.find())


@app.route('/simulation', methods=['POST'])
def perform_simulation():
    req = request.json
    finalStep = req['finalStep']
    cwd = os.getcwd()
    headless_path = os.path.join(cwd, 'GAMA_1.8.1_Windows', 'headless')
    samples = os.path.join(headless_path, 'samples')
    # xml_path = os.path.join(samples, 'predatorPrey.xml')
    xml_path = os.path.join(samples, 'roadTraffic.xml')
    # tree = ET.parse(xml_path)
    # root = tree.getroot()

    # simulation_tag = root.find('Simulation')
    # simulation_tag.set('finalStep', int(finalStep))
    # simulation_tag.find('Outputs').find('Output').set('framerate', req['framerate'])

    # tree.write(os.path.join(samples, 'predatorPrey.xml'))
    # tree.write(os.path.join(samples, 'roadTraffic.xml'))

    subprocess.call((f"cd {headless_path} && gama-headless.bat {xml_path} outputHeadless"), shell=True)

    snapshots_path = os.path.join(headless_path, 'outputHeadless', 'snapshot')
    imgs = [os.path.join(snapshots_path, img) for img in os.listdir(snapshots_path)]
    clip = ISC.ImageSequenceClip(imgs, fps=24)
    clip.write_videofile('test.mp4')

    return send_from_directory(cwd, filename='test.mp4', as_attachment=True)


@app.errorhandler(503)
def internal_error(error):
    return "Something went wrong. Contact the administrator."
